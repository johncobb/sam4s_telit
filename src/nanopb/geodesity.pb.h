/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Tue May  8 12:36:28 2018. */

#ifndef PB_GEODESITY_PB_H_INCLUDED
#define PB_GEODESITY_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _EventType {
    EventType_EVENT_INVALID = 0,
    EventType_EVENT_HEARTBEAT = 1,
    EventType_EVENT_POSITION_TIMED = 2,
    EventType_EVENT_IDLE_NOTIFY = 3,
    EventType_EVENT_PARK_NOTIFY = 4
} EventType;
#define _EventType_MIN EventType_EVENT_INVALID
#define _EventType_MAX EventType_EVENT_PARK_NOTIFY
#define _EventType_ARRAYSIZE ((EventType)(EventType_EVENT_PARK_NOTIFY+1))

typedef enum _NotifyType {
    NotifyType_NOTIFY_INVALID = 0,
    NotifyType_NOTIFY_ENTER_IDLE = 1,
    NotifyType_NOTIFY_CONTINUE_IDLE = 2,
    NotifyType_NOTIFY_LEAVE_IDLE = 3
} NotifyType;
#define _NotifyType_MIN NotifyType_NOTIFY_INVALID
#define _NotifyType_MAX NotifyType_NOTIFY_LEAVE_IDLE
#define _NotifyType_ARRAYSIZE ((NotifyType)(NotifyType_NOTIFY_LEAVE_IDLE+1))

/* Struct definitions */
typedef struct _Heartbeat {
    uint32_t sequence;
/* @@protoc_insertion_point(struct:Heartbeat) */
} Heartbeat;

typedef struct _Position {
    float longitude;
    float latitude;
    float altitude;
    float course;
    float speed;
    float odometer;
/* @@protoc_insertion_point(struct:Position) */
} Position;

typedef struct _IdleNotify {
    Position position_timed;
    NotifyType type;
    uint32_t seconds;
/* @@protoc_insertion_point(struct:IdleNotify) */
} IdleNotify;

typedef struct _ParkNotify {
    Position position_timed;
    NotifyType type;
    uint32_t seconds;
/* @@protoc_insertion_point(struct:ParkNotify) */
} ParkNotify;

typedef struct _Event {
    char id[40];
    EventType type;
    uint64_t utc_millis;
    pb_size_t which_Details;
    union {
        Heartbeat heartbeat;
        Position position;
        IdleNotify idle_notify;
        ParkNotify park_notify;
    } Details;
/* @@protoc_insertion_point(struct:Event) */
} Event;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Event_init_default                       {"", _EventType_MIN, 0, 0, {Heartbeat_init_default}}
#define Heartbeat_init_default                   {0}
#define Position_init_default                    {0, 0, 0, 0, 0, 0}
#define IdleNotify_init_default                  {Position_init_default, _NotifyType_MIN, 0}
#define ParkNotify_init_default                  {Position_init_default, _NotifyType_MIN, 0}
#define Event_init_zero                          {"", _EventType_MIN, 0, 0, {Heartbeat_init_zero}}
#define Heartbeat_init_zero                      {0}
#define Position_init_zero                       {0, 0, 0, 0, 0, 0}
#define IdleNotify_init_zero                     {Position_init_zero, _NotifyType_MIN, 0}
#define ParkNotify_init_zero                     {Position_init_zero, _NotifyType_MIN, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Heartbeat_sequence_tag                   300
#define Position_longitude_tag                   301
#define Position_latitude_tag                    302
#define Position_altitude_tag                    303
#define Position_course_tag                      304
#define Position_speed_tag                       305
#define Position_odometer_tag                    306
#define IdleNotify_position_timed_tag            307
#define IdleNotify_type_tag                      308
#define IdleNotify_seconds_tag                   309
#define ParkNotify_position_timed_tag            310
#define ParkNotify_type_tag                      311
#define ParkNotify_seconds_tag                   312
#define Event_heartbeat_tag                      100
#define Event_position_tag                       101
#define Event_idle_notify_tag                    102
#define Event_park_notify_tag                    103
#define Event_id_tag                             1
#define Event_type_tag                           2
#define Event_utc_millis_tag                     4

/* Struct field encoding specification for nanopb */
extern const pb_field_t Event_fields[8];
extern const pb_field_t Heartbeat_fields[2];
extern const pb_field_t Position_fields[7];
extern const pb_field_t IdleNotify_fields[4];
extern const pb_field_t ParkNotify_fields[4];

/* Maximum encoded size of messages (where known) */
#define Event_size                               107
#define Heartbeat_size                           7
#define Position_size                            36
#define IdleNotify_size                          49
#define ParkNotify_size                          49

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define GEODESITY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
